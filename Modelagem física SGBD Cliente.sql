/* Modelagem Básica MySQL Cliente - 
ENTIDADE = TABELA 
CAMPOS = ATRIBUTOS */

CLIENTE

NOME - CARACTER(30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECOO - CARACTER(100)
SEXO - CARACTER(1)

/* PROCESSOS DE MODELAGEM 

FASE 01 E 02 => AD (ADMINISTRADOR DE DADOS) NA MODELAGEM CONCEITUAL E LÓGICA

MODELAGEM CONCEITUAL - RASCUNHO 
MODELAGEM LÓGICA - WORKBENCH , BRMODELO , STARUML

FASE 03 - DBA (ADMINISTRADOR DE BANCO DE DADOS [SCRIPT]) / AD
MODELAGEM FÍSICA - SCRIPTS DE BANCO

*/
/* CRIANDO O BANCO DE DADOS */
CREATE DATABASE PROJETO;

CREATE DATABASE EXEMPLO;

/* CONECTENDO-SE AO BANCO */
USE PROJETO;

/* CRIANDO A TABELA DE CLIENTES */
CREATE TABLE CLIENTE(
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	CPF INT(11),
	TELEFONE VARCHAR(30),
	ENDERECO VARCHAR(100)
);
/* 
 BIG DATA (BG) TRABALHA COM DADOS COMPLEXOS E NÃO ESTRUTURADOS
 ADMINISTRAÇÃO DE DADOS (AD) CUIDA DOS DADOS
 ADMINISTRAÇÃO DE BASE DE DADOS (DBA)CUIDA DA INFRAESTRUTURA DO BANCO
 TUNNING (TN) CUIDA DA OTIMIZAÇÃO DO BANCO
 BUSINESS INTELLIGENCE (BI) ANALISA O OCORRIDO NO PASSADO]
 DATA SCIENCE (DS) ANALISA O QUE PODE OCORRER NO FUTURO
 MINERAÇÃO DE DADOS (MD) LIGADO A DATA SCIENCE */
 
/* AMOSTRAR A DATABASE VIGENTE */
STATUS
 
 /* VERIFICANDO AS TABELAS DO BANCO */
SHOW TABLES; 

/* AMOSTRAS TODOS OS DATABASES */
SHOW DATABASES;

/* SINTAXE BÁSICA DE INSERÇÃO - INSERT INTO TABELA... */
/* FORMA 01 - OMITINDO AS COLUNAS */
INSERT INTO CLIENTE VALUES('JOAO', 'M', 'JOAO@GMAIL.COM', 988638273, '22923110', 'MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ');

/* FORMA 02 - DESCREVENDO AS COLUNAS - MELHOR FORMA */
INSERT INTO CLIENTE(NOME, SEXO, ENDERECO, TELEFONE, CPF) VALUES('LILIAN', 'F', 'SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ', '947785696', 887774856);

INSERT INTO CLIENTE(NOME, SEXO, EMAIL, ENDERECO, TELEFONE, CPF) VALUES('JOAO', 'M', 'JOAO@GMAIL.COM', 'MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ', '22923110', 988638273),
('JORGE', 'M', NULL, 'OSCAR CURY - BOM RETIRO - PATOS DE MINAS - MG', '58748895', 885755896);

INSERT INTO CLIENTE(NOME, SEXO, EMAIL, ENDERECO, TELEFONE, CPF) VALUES('CELIA', 'F', 'CELIA@GMAIL.COM', 'RIACHUELO - CENTRO - RIO DE JANEIRO - RJ', '25078869', 541521456);

 /* FORMA 03 - INSERT COMPACTO - SOMENTE MYSQL */
 INSERT INTO CLIENTE VALUES('ANA', 'F', 'ANAGLOBO.COM', 85548962, '548556985', 'PRES. ANTONIO CARLOS - CENTRO - SAO PAULO - SP'),
 ('CARLA', 'F', 'CARLA@TERATI.COM.BR', 7745828, '66587458', 'SAMUEL SILVA - CENTRO - BELO HORIZONTE - MG');
 
 /* NÃO PODE SER ACEITO O CPF POR CONTA DO TAMANHO MÁXIMO DA VARIÁVEL INT(11) INT ou inteiro	4 bytes	(-2 147 483 648,2 147 483 647) */
INSERT INTO CLIENTE(NOME, SEXO, ENDERECO, TELEFONE, CPF) VALUES('CLARA', 'F', 'SENADOR SOARES - TIJUCA - RIO DE JANEIRO - RJ', '883665843', 99999999999);

/* O COMANDO SELECT
SELEÇÃO PROJEÇÃO E JUNÇÃO
*/
SELECT NOW(); /*DATA PRESENTE*/
SELECT NOW() AS DATA_HORA; /* DATA E HORA COMO DADO NUMA TABELA*/
SELECT NOW() AS DATA_HORA, 'FELIPE MAFRA' AS PROFESSOR; /* DATA E HORA COMO DADO E FELIPE MAFRA COMO PROFESSOR NUMA TABELA */

SELECT 'FELIPE MAFRA';

SELECT 'BANCO DE DADOS';

/* ALIAS DE COLUNAS */

SELECT NOME, SEXO, EMAIL FROM CLIENTE;

SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE;

SELECT EMAIL, SEXO, ENDERECO, NOME FROM CLIENTE;

/* NÃO USE A QUERY
 SELECT * FROM CLIENTE;
 PORQUE AUMENTA A CARGA DE PROCESSAMENTO DO SISTEMA E DE REDE */
 
 /* FILTRANDO DADOS DE BUSCA */
 SELECT NOME, SEXO FROM CLIENTE
 WHERE SEXO = 'F';
 
 SELECT NOME, ENDERECO FROM CLIENTE
 WHERE SEXO = 'M';
 
 SELECT NOME, SEXO FROM CLIENTE
 WHERE ENDERECO = 'MAIA LACERDA - ESTACIO - RIO DE JANEIRO - RJ';
 
 /* BUSCA VAZIA PORQUE  O CAMPO ENDEREÇO ESTÁ INCOMPLETO */
 SELECT NOME, SEXO FROM CLIENTE
 WHERE ENDERECO = 'RJ';
 
 /* UTILIZANDO LIKE COM BUSCA VAZIA PORQUE O CAMPO ENDEREÇO ESTÁ INCOMPLETO */
 SELECT NOME , SEXO FROM CLIENTE
 WHERE ENDERECO LIKE 'RJ';
 
 /* CARACTERE CORINGA % -> QUALQUER COISA SEMELHANTE ASTERÍSTICO - %XXX OU XXXX% OU %XXX% */
 SELECT NOME, SEXO FROM CLIENTE WHERE ENDERECO LIKE ='%RJ';
 
 /* SELECT VARIADOS COM FILTROS DE BUSCA */
 SELECT * FROM LIVROS;

SELECT NOME_LIVRO, NOME_EDIT FROM LIVROS;

SELECT NOME_LIVRO, UF_EDIT FROM LIVROS WHERE SEXO_AUTOR = 'MASCULINO';

SELECT NOME_LIVRO, NUM_PAG FROM LIVROS WHERE SEXO_AUTOR = 'FEMININO';

SELECT VALOR_LIVRO FROM LIVROS WHERE UF_EDIT ='SP';

SELECT NOME_AUTOR, SEXO_AUTOR, UF_EDIT FROM LIVROS WHERE UF_EDIT ='RJ' OR UF_EDIT='SP';

/* TABELA VERDADE E OPERADORES LÓGICOS */

	+---+---+--------+--------+
	 A	| B | A OR B | A AND B
	 V	| V |   V    |    V
	 V  | F |   V    |    F
	 F  | V |   V    |    F
	 F  | F |   F    |    F

/* OR -> PARA QUE A SAÍDA DA QUERY SEJA VERDADEIRA, BASTA QUE UMA CONDIÇÃO SEJA VERDADE
AND -> PARA QUE A SAÍDA DA QUERY SEJA VERDADEIRA TODAS */

SHOW TABLES;

SELECT * FROM CLIENTE;

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO ='M' OR ENDERECO LIKE '%RJ';
SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO ='M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO ='F' OR ENDERECO LIKE '%ESTACIO'; 
SELECT NOME, SEXO, ENDERECO FROM CLIENTE WHERE SEXO = 'F' OR ENDERECO = '%RIO DE JANEIRO';

/* FUNÇÕES DE AGREGAÇÃO PERFORMANCE EM OPERADORES LÓGICOS */
/* CONTANDO OS REGISTROS DE UMA TABELA */
SELECT COUNT(*) FROM CLIENTE;

SELECT COUNT(*) AS "QUANT. DE REG. DA TABELA CLIENTE" FROM CLIENTE;

/* OPERADOR GROUP BY */
SELECT SEXO, COUNT(*) FROM CLIENTE GROUP BY SEXO;

/* SITUAÇÃO - TRATANDO COM OR
70% MULHERES = SEXO = F
30% MORA NO RIO DE JANEIRO */

/* trazendo resultados 
  primeiro quantos funcionarios tem */
  select count(*) from funcionarios;
  
   select nome from funcionarios where departamento= 'Roupas' or 'Filmes';
  
  /* trazendo funcionarios ou campos de funcionarios de determinado sexo em determinado setores */
  select * from funcionarios where (departamento= 'Lar' and sexo = 'Feminino') or (departamento= 'Filmes' and sexo = 'Feminino');
  select nome, email from funcionarios where (departamento= 'Lar' and sexo = 'Feminino') or (departamento= 'Filmes' and sexo = 'Feminino');
  
  select nome from funcionarios where sexo =  'masculino' or departamento= 'Jardim';
  select nome from funcionarios where sexo =  'masculino' and departamento= 'Jardim';
  
  /* trazendo resultados 
  primeiro quantos funcionarios tem */
  select count(*) from funcionarios;
  
  /* contagem de funcionarios por sexo */
  select count(*), sexo from funcionarios group by sexo;
  
  /* trazendo quantos funcionarios trabalham por departamento agrupados */
  select count(*), departamento from funcionarios group by departamento;
  
  /* trazendo quantos funcionarios trabalham por departamento agrupados ordenando por quantidade */
  select count(*), departamento from funcionarios group by departamento order by 1;
  
  /* trazendo quantos funcionarios trabalham por quais especificos departamentos agrupados  */
  select * from funcionarios where departamento= 'roupas' or departamento= 'filmes';
  
  /* recordando basicos */
  show databases;
  use projeto;
  show tables;
  select * from cliente;
  
  /* filtragem valores nulos */
select nome, sexo, endereco from cliente where email is null;

select nome, sexo, endereco from cliente where email is not null;

/* utilizando o update para atualizar valores */

select * from cliente where nome = 'lilian';

update cliente
set email = 'joao@ig.com.br'
where nome = 'joao';

update cliente
set email = 'lilian@hotmail.com'
where nome = 'lilian';

update cliente
set email = 'jorge@ig.com.br'
where nome = 'jorge';

/* deletando registros com a clausula delete */
delete from cliente; /* apaga a tabela toda */

select count(*) from cliente;

select count(*) from cliente
where nome = 'ana';

delete from cliente
where nome = 'ana';

select count(*) from cliente;

select 6-1;

insert into cliente values('CARLA', 'F', 'c.lopes@uol.com', 45638854, '4575-0048', 'COPPER LEAF - WILLIAMSBURG - KITCHENER');

select * from cliente where nome = 'ana';

delete from cliente
where nome = 'carla'
and email = 'CARLA@TERATI.COM.BR';

/* começando a modelagem - PRIMEIRA FORMA NORMAL */

select sexo, count(*) as QUANTIDADE
from cliente
group by sexo;

/*PRIMEIRA FORMA NORMAL */

/* 1- TODO CAMPO VETORIZADO SE TORNARÁ UMA TABELA 
VETORES [ AMARELO, AZUL, LARANJA]
[ KA, FIESTA, UNO]

2- TODO CAMPO MULTIVALORADO SE TORNARÁ OUTRA TABELA QUANDO O CAMPO FOR DIVISÍVEL
EXEMPLO -> VETORES SÃO ELEMENTOS DE MESMA FAMÍLIA COMO TELEFONES DE CONTATO PODEM SER CELULAR E FIXO, MAS, 
RUA, BAIRRO, CIDADE E ESTADO SÃO ELEMENTOS DIFERENTES APESAR DE SEREM COMPLEMENTOS DE ENDEREÇO.

3- TODA A TABELA PRECISA DE PELO MENOS UM CAMPO QUE IDENTIFIQUE TODO O REGISTRO COMO SENDO ÚNICO.
ISSO É O QUE CHAMAMOS DE CHAVE PRIMÁRIA OU PRIMARY KEY.

*NÃO É ACONSELHÁVEL USAR NÚMERO DE DOCUMENTO COMO PRIMARY KEY
*ACONSELHÁVEL CRIAR UMA CHAVE DO TIPO IDENTIFIED
*AS CHAVES PODEM SER ARTIFICIAIS OU NATURAIS
NATURAIS SÃO CRIADAS PELO BD E AS ARTIFICIAIS SÃO CRIADAS INSTANTÂNEAMENTE
*/

/* CARDINALIDADE */

/* TEMOS NA MODELAGEM ENTIDADES E RELAÇÃO
CARDINALIDADE E OBRIGATORIEDADE
QUEM DEFINE OS VALORES DE CARDINALIDADE SÃO AS REGRAS DE NEGÓCIO
O 1º ESTÁ RELACIONADO COM OBRIGATORIEDADE E O SEGUNDO COM CARDINALIDADE, SE O 1º ALGARISMO FOR ZERO ENTÃO É FALSO E SE FOR 1 É VERDADEIRA A OBRIGATORIEDADE.
QUANDO NÃO TEM OBRIGATORIEDADE O VALOR É 1, 
QUANDO HÁ A OBRIGATORIEDADE QUE É O VALOR MÍNIMO,A CARDINALIDADE DEFINE O VALOR MÁXIMO
(0,n) 
(0,1)
(1/n)
(1/1)

APÓS A MODELAGEM LÓGICA NO BRMODELO OU STARUML PASSAMOS A CRIAÇÃO COM NOTEPAD++ E SQLCODE */

CREATE DATABASE COMERCIO;

USE COMERCIO;

CREATE TABLE CLIENTE(
	IDCLIENTE INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	SEXO ENUM('M', 'F') NOT NULL,
	EMAIL VARCHAR(50)UNIQUE,
	CPF VARCHAR(15) UNIQUE
);

CREATE TABLE ENDERECO(
	IDENDERECO INT PRIMARY KEY AUTO_INCREMENT,
	RUA VARCHAR(30) NOT NULL,
	BAIRRO VARCHAR(30) NOT NULL,
	CIDADE VARCHAR(30) NOT NULL,
	ESTADO CHAR(2) NOT NULL,
	ID_CLIENTE INT UNIQUE,
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

CREATE TABLE TELEFONE(
	IDTELEFONE INT PRIMARY KEY AUTO_INCREMENT,
	TIPO ENUM('RES', 'COM', 'CEL') NOT NULL,
	NUMERO VARCHAR(10) NOT NULL,
	ID_CLIENTE INT,
	FOREIGN KEY (ID_CLIENTE)
	REFERENCES CLIENTE(IDCLIENTE)
);

/* CHAVES ESTRANGEIRAS FOREIGN KEY (FK) 
É A CHAVE PRIMÁRIIA DE UMA TABELA QUE VAI ATÉ A OUTRA TABELA PARA FAZER REFERÊNCIA ENTRE REGISTROS */

/* EM RELACIONAMENTO 1 X1 A CHAVE ESTRANGEIRA FICA NA  TABELA MAIS FRACA 
EM RELACIONAMENTOS 1 X N A CHAVE ESTRANGEIRA FICARÁ SEMPRE NA CARDINALIDADE N */

/* PARA DELETAR TABELAS */
DROP TABLE CLIENTE;
DROP TABLE ENDERECO;
DROP TABLE TELEFONE;

